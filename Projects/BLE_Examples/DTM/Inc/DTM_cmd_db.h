

/**
  ******************************************************************************
  * @file    DTM_cmd_db.h
  * @author  AMS - RF Application team
  * @date    10 March 2022
  * @brief   Autogenerated files, do not edit!!
  ******************************************************************************
  * @attention
  *
  * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  *
  * <h2><center>&copy; COPYRIGHT STMicroelectronics</center></h2>
  ******************************************************************************
  */
#ifndef _DTM_CMD_DB_H_
#define _DTM_CMD_DB_H_
#include <stdint.h>
#include "stack_user_cfg.h"
#include "miscutil.h"

#if (defined(CONTROLLER_POWER_CONTROL_ENABLED) &&\
            (CONTROLLER_POWER_CONTROL_ENABLED == 1))
#   define CONTROLLER_POWER_CONTROL_COMMANDS (6)
#else
#   define CONTROLLER_POWER_CONTROL_COMMANDS (0)
#endif

typedef uint16_t (*hci_command_process_and_response_type)(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) ;
typedef struct hci_command_table_type_s {
  uint16_t opcode;
  hci_command_process_and_response_type execute;
} hci_command_table_type;

#ifndef CONFIG_NO_HCI_COMMANDS 
/* DTM full commands set */
extern const hci_command_table_type hci_command_table[220 + CONTROLLER_POWER_CONTROL_COMMANDS];
#else 

/* DTM reduced set of commands (removed most of HCI commands). 
   It is used "ONLY"  for BlueNRG-LPS, Bluetooth LE stack v3.x features evaluation.
   Based on application targets, user must then define his own DTM configuration 
   starting from DTM_Basic project (BLE_STACK_BASIC_CONF) and select:
   1) Bluetooth LE stack v3.x modular configurations to be turned ON 
   2) DTM_Config.h parameters which impact on RAM footprints + num of links. 
   3) Verify application memory footprint vs available BlueNRG-LPS
      Flash/RAM memory resources (192Kb/24Kb).
*/
extern const hci_command_table_type hci_command_table[220 + CONTROLLER_POWER_CONTROL_COMMANDS-63];
#endif 


extern void send_event(uint8_t *buffer_out, uint16_t buffer_out_length, int8_t overflow_index);
extern void send_event_2buffers(uint8_t *buffer_out1, uint16_t buffer_out_length1, uint8_t *buffer_out2, uint16_t buffer_out_length2, int8_t overflow_index);
tBleStatus aci_hal_updater_start(void);
tBleStatus aci_hal_get_firmware_details(uint8_t *DTM_version_major,uint8_t *DTM_version_minor,uint8_t *DTM_version_patch,uint8_t *DTM_variant,uint16_t *DTM_Build_Number,uint8_t *BTLE_Stack_version_major,uint8_t *BTLE_Stack_version_minor,uint8_t *BTLE_Stack_version_patch,uint8_t *BTLE_Stack_development,uint16_t *BTLE_Stack_variant,uint16_t *BTLE_Stack_Build_Number);
tBleStatus aci_hal_transmitter_test_packets(uint8_t TX_Frequency,uint8_t Length_Of_Test_Data, uint8_t Packet_Payload, uint16_t Number_Of_Packets, uint8_t PHY);
tBleStatus aci_hal_transmitter_test_packets_v2(uint8_t TX_Channel,uint8_t Test_Data_Length,uint8_t Packet_Payload,uint16_t Number_Of_Packets,uint8_t PHY,uint8_t CTE_Length,uint8_t CTE_Type,uint8_t Switching_Pattern_Length, uint8_t Antenna_IDs[]);
tBleStatus hci_le_read_maximum_advertising_data_length(uint16_t *Maximum_Advertising_Data_Length);
void aci_hal_le_test_end_event(uint16_t Number_Of_Packets);
tBleStatus aci_test_tx_notification_start(uint16_t Connection_Handle, uint16_t Service_Handle, uint16_t Char_Handle, uint16_t Value_Length);
tBleStatus aci_test_tx_write_command_start(uint16_t Connection_Handle, uint16_t Attr_Handle, uint16_t Value_Length);
tBleStatus aci_test_rx_start(uint16_t Connection_Handle, uint16_t Attribute_Handle, uint8_t Notifications_WriteCmds);
tBleStatus aci_test_stop(uint8_t TX_RX);
tBleStatus aci_test_report(uint32_t *TX_Notifications, uint32_t *RX_Notifications, uint16_t *RX_Data_Length, uint32_t *RX_Sequence_Errors);
#endif /* _DTM_CMD_DB_H_ */
